[ArgumentCompleter({
  [OutputType([System.Management.Automation.CompletionResult])]
  param(
    [string] $CommandName,
    [string] $ParameterName,
    [string] $WordToComplete,
    [System.Management.Automation.Language.CommandAst] $CommandAst,
    [System.Collections.IDictionary] $FakeBoundParameters
  )
  
  $CompletionResults = [System.Collections.Generic.List[System.Management.Automation.CompletionResult]]::new()
  
  #!/usr/bin/env pwsh
  $basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent
  
  $exe=""
  if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {
    # Fix case when both the Windows and Linux builds of Node
    # are installed in the same directory
    $exe=".exe"
  }
  $ret=0
  if (Test-Path "$basedir/node$exe") {
    # Support pipeline input
    if ($MyInvocation.ExpectingInput) {
      $input | & "$basedir/node$exe"  "$basedir/../dist/corepack.js" $args
    } else {
      & "$basedir/node$exe"  "$basedir/../dist/corepack.js" $args
    }
    $ret=$LASTEXITCODE
  } else {
    # Support pipeline input
    if ($MyInvocation.ExpectingInput) {
      $input | & "node$exe"  "$basedir/../dist/corepack.js" $args
    } else {echo
      & "node$exe"  "$basedir/../dist/corepack.js" $args
    }
    $ret=$LASTEXITCODE
  }
  exit $ret
  
  
  return $CompletionResults
})]